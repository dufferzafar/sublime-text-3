[
    // ========================================================================
    //                   Custom Hotkeys for Default Commands
    // ========================================================================

    // Add multiple cursors to lines
    // On Ubuntu Alt+Ctrl+Up is used to change workspaces
    { "keys": ["alt+shift+up"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["alt+shift+down"], "command": "select_lines", "args": {"forward": true} },

    // Every other application I use creates a new tab with Ctrl + T
    { "keys": ["ctrl+t"], "command": "new_file" },

    // Jump, back and forward in editing positing
    { "keys": ["alt+["], "command": "jump_back" },
    { "keys": ["alt+]"], "command": "jump_forward" },

    // Alt + D is similar to Ctrl + D
    { "keys": ["alt+d"], "command": "find_all_under" },

    // Alt + D is similar to Ctrl + D
    { "keys": ["alt+z"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},
    // Sort & Unique
    { "keys": ["f9"], "command": "sort_lines", "args": {"case_sensitive": false} },
    { "keys": ["f10"], "command": "permute_lines", "args": {"operation": "unique"} },

    // This scrolls while not changing the cursor's position
    { "keys": ["ctrl+up"], "command": "scroll_lines", "args": {"amount": 3.0 } },
    { "keys": ["ctrl+down"], "command": "scroll_lines", "args": {"amount": -3.0 } },

    // I don't like the stack based view
    { "keys": ["ctrl+tab"], "command": "next_view" },
    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },

    // Emmet overrides this, so we override emmet :(|)
    { "keys": ["ctrl+shift+r"], "command": "goto_symbol_in_project" },

    // Line numbers are useless (except when they're not!)
    { "keys": ["ctrl+alt+l"], "command": "toggle_setting", "args": { "setting": "line_numbers" } },

    // Hide / Show Menubar
    { "keys": ["ctrl+alt+m"], "command": "toggle_menu"},

    // Enter opens the 'File' in Find Results
    { "keys": ["enter"], "command": "next_result",
                         "context": [{"key": "selector", "operator": "equal", "operand": "text.find-in-files" }]},

    // Ctrl + Shift + Space is too hard to press
    { "keys": ["ctrl+shift+'"], "command": "expand_selection", "args": {"to": "indentation"} },

    { "keys": ["ctrl+shift+a"], "command": "arithmetic"},

    { "keys": ["alt+ctrl+c"], "command": "toggle_setting", "args": {"setting": "draw_centered"} },

    // The default hotkeys are hard to reach
    { "keys": ["alt+ctrl+g"],   "command": "goto_definition" },
    { "keys": ["alt+ctrl+r"],   "command": "goto_reference" },

    // ========================================================================
    //                      Hotkeys for My Custom Plugins
    //                    They should be on this repo itself
    // ========================================================================

    // Multi cursor management
    // Add Cursor
    { "keys": ["ctrl+alt+'"], "command": "cursor", "args": {"action": "add"}},
    { "keys": ["ctrl+alt+;"], "command": "cursor", "args": {"action": "remove"}},
    { "keys": ["ctrl+alt+/"], "command": "cursor", "args": {"action": "show"}},


    // ========================================================================
    //                      Hotkeys for 3rd Party Plugins
    // ========================================================================

    // ------------------------------------------------------------------------
    //                           These run everywhere
    // ------------------------------------------------------------------------

    // SideBarEnhancements

    // Open currently opened file's folder in File Browser
    { "keys": ["ctrl+alt+z"], "command": "side_bar_reveal" },

    // Open sidebar with current file selected
    { "keys": ["ctrl+k", "ctrl+r"], "command": "reveal_in_side_bar" },
    // { "keys": ["ctrl+k", "ctrl+r"], "command": "focus_file_on_sidebar" },

    // Launch a terminal
    // { "keys": ["ctrl+alt+c"], "command": "open_terminal" },
    // { "keys": ["ctrl+alt+shift+c"], "command": "open_terminal_project_folder" },

    // Clickable URLs
    { "keys": ["ctrl+shift+u"], "command": "plain_tasks_open_url" },
    // Ctrl + Alt + Enter conflicts with "Replace All", not anymore!
    { "keys": ["ctrl+alt+enter"], "command": "plain_tasks_open_url",
         "context": [{"key": "panel_has_focus", "operator": "not_equal", "operand": true}]
    },

    // Copy file name
    { "keys": ["ctrl+shift+c"], "command": "side_bar_copy_path" },

    // TextPastry
    { "keys": ["alt+shift+t"], "command": "text_pastry_show_menu" },
    { "keys": ["alt+shift+n"], "command": "text_pastry_show_command_line", "args": { "text": "1" } },

    // Insert Nums has a subset of
    // { "keys": ["shift+alt+t"], "command": "prompt_insert_nums" },

    // Advanced New File
    { "keys": ["ctrl+alt+n"], "command": "advanced_new_file_new" },

    // Git Savvy
    { "keys": ["ctrl+\\", "ctrl+\\"], "command": "gs_show_status" },
    { "keys": ["ctrl+\\", "d"],       "command": "gs_inline_diff" },
    { "keys": ["ctrl+\\", "ctrl+d"],  "command": "gs_inline_diff" },
    { "keys": ["ctrl+\\", "f"],       "command": "gs_diff" },
    { "keys": ["ctrl+\\", "ctrl+f"],  "command": "gs_diff" },
    { "keys": ["ctrl+\\", "l"],       "command": "gs_log" },
    { "keys": ["ctrl+\\", "ctrl+l"],  "command": "gs_log" },

    // Githubinator: Copy to clipboard
    { "keys": ["ctrl+shift+\\"], "command": "githubinator", "args": {"copyonly": true}},

    // GitGutter
    { "keys": ["ctrl+."], "command": "git_gutter_next_change" },
    { "keys": ["ctrl+,"], "command": "git_gutter_prev_change" },

    // Todo Review
    { "keys": [ "ctrl+\\", "ctrl+t" ], "command": "todo_review" },

    // Similar to firefox
    { "keys": ["alt+9"], "command": "last_view" },

    // Wrap Lines Plus
    // { "keys": ["alt+q", "q"], "command": "wrap_lines_plus" },
    // { "keys": ["alt+q", "8"], "command": "wrap_lines_plus", "args": {"width": 80}},

    // Expand selection to quotes
    { "keys": ["ctrl+'"], "command": "expand_region" },
    // {"keys": ["super+u"], "command": "expand_region", "args": {"undo": true}, "context": [{ "key": "expand_region_soft_undo" }] },

    // Zeal search
    { "keys": ["f1"], "command": "zeal_search_selection" },
    { "keys": ["shift+f1"], "command": "zeal_search" },

    // Insert Date
    { "keys": ["ctrl+i", "ctrl+t"], "command": "insert_date_panel"},
    { "keys": ["ctrl+i", "ctrl+d"], "command": "insert_date"},

    // Jrnl Plugin: https://github.com/dufferzafar/sublime-text-3/tree/master/Packages/Jrnl
    { "keys": ["ctrl+i", "ctrl+i"], "command": "jrnl_open", "args": {"jrnl": "idea", "is_path": false}},

    // Render RST
    // { "keys": ["alt+ctrl+r"], "command": "render_rst", "context":
    //       [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }] },

    // Plugin: Random Everything
    // {"keys": [ "ctrl+r", "ctrl+w" ], "command": "random_word"},
    // {"keys": [ "ctrl+r", "ctrl+t" ], "command": "random_text"},
    // {"keys": [ "ctrl+r", "ctrl+i" ], "command": "random_uuid"},
    // {"keys": [ "ctrl+r", "ctrl+f" ], "command": "random_first_name"},
    // {"keys": [ "ctrl+r", "ctrl+l" ], "command": "random_last_name"},
    // {"keys": [ "ctrl+r", "ctrl+n" ], "command": "random_full_name"},
    // {"keys": [ "ctrl+r", "ctrl+e" ], "command": "random_email"},
    // {"keys": [ "ctrl+r", "ctrl+u" ], "command": "random_url"},

    // ------------------------------------------------------------------------
    //        Only run in some specifc context (like Python files only)
    // ------------------------------------------------------------------------

    // Terminus: https://github.com/randy3k/Terminus
    { "keys": ["ctrl+w"], "command": "terminus_close", "context": [{"key": "setting.terminus_view"}] },

    // Anaconda
    { "keys": ["ctrl+alt+d"],   "command": "anaconda_doc",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},
    { "keys": ["ctrl+alt+g"],   "command": "anaconda_goto",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},
    { "keys": ["ctrl+alt+f"],   "command": "anaconda_find_usages",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},
    { "keys": ["ctrl+shift+8"], "command": "anaconda_auto_format",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},

    // Fold Python Docstrings
    { "keys": ["ctrl+shift+-"], "command": "fold_python_docstrings",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},
    { "keys": ["ctrl+shift+="], "command": "unfold_python_docstrings",
                                "context": [{"key": "selector", "operator": "equal", "operand": "source.python"}]},

    // Markdown Preview
    { "keys": ["alt+m"], "command": "markdown_preview", "args": {"target": "browser", "parser":"default"} ,
                         "context": [{"key": "selector", "operator": "equal", "operand": "text.html.markdown, text.html.markdown.gfm"}]},

    // Emmet Increments/Decrements | Ctrl Up/Down have been remapped as Home/End.
    { "keys": [ "alt+up" ],   "command": "run_emmet_action", "args": {"action": "increment_number_by_1"},
                              "context": [{"key": "emmet_action_enabled.increment_number_by_1"} ] },
    { "keys": [ "alt+down" ], "command": "run_emmet_action", "args": {"action": "decrement_number_by_1"},
                              "context": [{"key": "emmet_action_enabled.decrement_number_by_1"} ] },

    // Convert Case. Runs only when some text is selected.
    { "keys": ["ctrl+k", "ctrl+t"], "command": "title_case",
                                    "context": [{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }] },
    { "keys": ["ctrl+k", "ctrl+s"], "command": "convert_to_snake",
                                    "context": [{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }] },
    { "keys": ["ctrl+k", "ctrl+c"], "command": "convert_to_camel",
                                    "context": [{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }] },
]
